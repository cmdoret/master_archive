phi_stat <- rbind(phi_stat, tmp_phi)
}
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
apply(X = chrom,MARGIN = 1, function(pos) pos)
head(apply(X = chrom,MARGIN = 1, function(pos) pos))
View(chrom_sizes)
View(chrom_sizes)
genomic_pos <- function(snp){
return(snp$pos + chrom_sizes[chrom_sizes$chr==snp$chr,"start"])
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
genomic_pos <- function(snp){
print(snp)
return(snp$pos + chrom_sizes[chrom_sizes$chr==snp$chr,"start"])
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
snp["pos"]
snp["BP"]
str(snp["BP"] )
genomic_pos <- function(snp){
return(snp["BP"] + chrom_sizes[chrom_sizes$chr==snp["chr"],"start"])
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
()
genomic_pos <- function(snp){
return(as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["chr"],"start"])
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
genomic_pos <- function(snp){
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["chr"],"start"]
return(gen_pos)
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
genomic_pos()
gen_pos
genomic_pos <- function(snp){
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["chr"],"start"]
print(gen_pos)
return(gen_pos)
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
chrom_sizes[chrom_sizes$chr==snp["chr"],"start"]
snp <- chrom[1,]
snp
chrom_sizes[chrom_sizes$chr==snp["chr"],"start"]
snp["chr"]
snp[1,"chr"]
genomic_pos <- function(snp){
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
print(gen_pos)
return(gen_pos)
}
apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
View(chrom)
plot(rownames(chrom), chrom$phi_st, type="l", ylab='phi_st')
plot(chrom$tot_BP, chrom$phi_st, type="l", ylab='phi_st')
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos))+
geom_vline(data=chrom_sizes, aes(xintercept=start))
head(chrom)
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point()
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos))+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos))
highFST
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Fst.))
highFST
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos))+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2))+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=0.2)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=0.8)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=3)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.1)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.5)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_point(type='l') +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="lightblue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
View(chrom_sizes)
plot(chrom$tot_BP, chrom$phi_st, type="l", ylab='phi_st')
plot(chrom$tot_BP, chrom$Fst., type="l", ylab='Fst')
plot(chrom$tot_BP, chrom$Fst., type="l", ylab='Fst', xlab="genomic position")
hom_mother <- read.table("../../data/SNP_lists/m2_hom_mother.txt")
View(chrom)
View(hom_mother)
hom_mother <- read.csv("../../data/SNP_lists/m2_hom_mother.txt", header=T)
hom_mother
head(hom_mother)
hom_merged <- merge(x=chrom, y=hom_mother, by.x=c("Chr","BP","fam"), by.y=c("contig","bp","family"))
hom_merged
hom_merged
hom_merged
hom_mother
View(chrom)
View(chrom)
# Chromosome sizes
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann")
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
colnames(chrom_sizes) <- c("chrom","start","length")
phi_path <- '../../data/populations/d-20_r-75/'
tmp_phi <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
#tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
phi_stat
View(chrom)
View(phi_stat)
View(phi_stat)
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$Fst., type="l", ylab='Obs.Hom', xlab="genomic position")
plot(chrom$tot_BP, chrom$Obs.Hom, type="l", ylab='Fst', xlab="genomic position")
plot(chrom$tot_BP, chrom$Obs.Hom/chrom$Exp.Hom, type="l", ylab='Fst', xlab="genomic position")
View(chrom)
View(chrom)
ggplot(data=chrom, aes(x=tot_BP, y=Obs.Hom/Exp.Hom))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Obs.Hom/Exp.Hom), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
chrom
highFST <- chrom %>%
group_by(fam) %>%
filter(high==max(Obs.Hom/Exp.Hom))
highFST <- chrom %>%
group_by(fam) %>%
filter(high==max(Obs.Hom/Exp.Hom))
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Obs.Hom/Exp.Hom))
highFST <- chrom %>%
group_by(fam) %>%
filter(Obs.Hom/Exp.Hom==max(Obs.Hom/Exp.Hom))
ggplot(data=chrom, aes(x=tot_BP, y=Obs.Hom/Exp.Hom))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Obs.Hom/Exp.Hom), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
View(chrom)
library(dplyr)
library(readr)
library(ggplot2)
# Chromosome sizes
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann")
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
colnames(chrom_sizes) <- c("chrom","start","length")
# Genome statistics
phi_path <- '../../data/populations/d-20_r-75/'
# phi_path <- commandArgs(TrailingOnly=T)[1]
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
# Keeping only chromosomes (removing contigs)
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
# Finding genomic position of SNPs
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$Fst., type="l", ylab='Fst', xlab="genomic position")
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Fst.))
ggplot(data=chrom, aes(x=tot_BP, y=Fst.))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
library(dplyr)
library(readr)
library(ggplot2)
# Chromosome sizes
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann")
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
colnames(chrom_sizes) <- c("chrom","start","length")
# Genome statistics
stat_path <- '../../data/populations/d-20_r-75/'
# phi_path <- commandArgs(TrailingOnly=T)[1]
sum_stat <- data.frame()
for(fam in list.dirs(stat_path)[2:length(list.dirs(stat_path))]){  # Excluding first dir (parent)
tmp_stat <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
tmp_stat$fam <- rep(basename(fam))
sum_stat <- rbind(sum_stat, tmp_stat)
}
male_stat <- sum_stat[sum_stat$Pop.ID=="M",]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",]
male_stat
View(female_stat)
View(chrom_sizes)
View(sum_stat)
merge(male_stat,female_stat,by=c('Chr','BP'))
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Locus.ID','Chr','BP','Obs.Hom')]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Locus.ID','Chr','BP','Obs.Het')]
merge(male_stat,female_stat,by=c('Chr','BP'))
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom')]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het')]
merge(male_stat,female_stat,by=c('Chr','BP'))
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP'))
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)/2
CSD_like
sum_stat <- sum_stat %>% arrange(Chr, BP)
chrom <- sum_stat[grep("chr.*", sum_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
View(CSD_like)
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$Obs.Hom/chrom$Exp.Hom, type="l", ylab='Fst', xlab="genomic position")
plot(chrom$tot_BP, chrom$CSD, type="l", ylab='Fst', xlab="genomic position")
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
View(CSD_like)
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'Family')]
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'fam')]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het', 'fam')]
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)/2
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$CSD, type="l", ylab='Fst', xlab="genomic position")
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
highCSD
ggplot(data=chrom, aes(x=tot_BP, y=Obs.Hom/Exp.Hom))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Obs.Hom/Exp.Hom), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highCSD(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD, col=fam))+ geom_line() +
geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
View(chrom)
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'fam', 'N')]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het', 'fam', 'N')]
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
View(CSD_like)
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)*(CSD_like$N.x+CSD_like$N.y)/2
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$CSD, type="l", ylab='Fst', xlab="genomic position")
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD, col=fam))+ geom_line() +
geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
plot(chrom$tot_BP, chrom$CSD, type="l", ylab='Fst', xlab="genomic position")
library(dplyr)
library(readr)
library(ggplot2)
# Chromosome sizes
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann")
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
colnames(chrom_sizes) <- c("chrom","start","length")
# Genome statistics
stat_path <- '../../data/populations/d-20_r-75/'
# phi_path <- commandArgs(TrailingOnly=T)[1]
sum_stat <- data.frame()
for(fam in list.dirs(stat_path)[2:length(list.dirs(stat_path))]){  # Excluding first dir (parent)
tmp_stat <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
tmp_stat$fam <- rep(basename(fam))
sum_stat <- rbind(sum_stat, tmp_stat)
}
# Computing CSD-ness
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'fam', 'N')]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het', 'fam', 'N')]
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
#CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)*(CSD_like$N.x+CSD_like$N.y)/2
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)/2
# Keeping only chromosomes (removing contigs)
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
# Finding genomic position of SNPs
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$CSD, type="l", ylab='Fst', xlab="genomic position")
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD, col=fam))+ geom_line() +
geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
# Chromosome sizes
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann")
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
colnames(chrom_sizes) <- c("chrom","start","length")
# Genome statistics
stat_path <- '../../data/populations/d-20_r-75/'
# phi_path <- commandArgs(TrailingOnly=T)[1]
sum_stat <- data.frame()
for(fam in list.dirs(stat_path)[2:length(list.dirs(stat_path))]){  # Excluding first dir (parent)
tmp_stat <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
tmp_stat$fam <- rep(basename(fam))
sum_stat <- rbind(sum_stat, tmp_stat)
}
# Computing CSD-ness
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'fam', 'N')]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het', 'fam', 'N')]
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)*(CSD_like$N.x+CSD_like$N.y)/2
# Keeping only chromosomes (removing contigs)
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
# Finding genomic position of SNPs
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
plot(chrom$tot_BP, chrom$CSD, type="l", ylab='Fst', xlab="genomic position")
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
ggplot(data=chrom, aes(x=tot_BP, y=CSD, col=fam))+ geom_line() +
geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2)
library(dplyr)
library(readr)
library(ggplot2)
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann", stringsAsFactors = F)
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
rownames(chrom_sizes) <- NULL
colnames(chrom_sizes) <- c("chrom","start","length")
chrom_sizes$length <- as.numeric(chrom_sizes$length)
chrom_sizes$mid <- chrom_sizes$start + (chrom_sizes$length/2)
# Genome statistics
stat_path <- '../../data/populations/d-20_r-80/'
# phi_path <- commandArgs(TrailingOnly=T)[1]
sum_stat <- data.frame()
for(fam in list.dirs(stat_path)[2:length(list.dirs(stat_path))]){  # Excluding first dir (parent)
tmp_stat <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
tmp_stat$fam <- rep(basename(fam))
sum_stat <- rbind(sum_stat, tmp_stat)
}
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'fam', 'N',"Locus.ID")]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het', 'fam', 'N')]
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)/2
CSD_like <- rename(CSD_like, Nm=N.x,Nf=N.y, Male.Hom=Obs.Hom, Fem.Het=Obs.Het)
#CSD_like <- CSD_like[CSD_like$Nf>1 & CSD_like$Nm>1,]
# Keeping only chromosomes (removing contigs)
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(CSD), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='prop. CSD', xlab="genomic position",
main="Proportion of CSD individuals, averaged across families")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=0.2,labels = chrom_sizes$chrom)
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
top_CSD <- chrom[chrom$CSD>=0.8,]
hist(top_CSD$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=17,labels = chrom_sizes$chrom)
ggplot(data=chrom[chrom$Nm>1 & chrom$Nf>1,], aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + #geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
ylab("Prop.CSD")
