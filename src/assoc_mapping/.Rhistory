odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "BH")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() + geom_hline(aes(yintercept=-log10(0.05))) +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$cluster <- 1
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "BH")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() + geom_hline(aes(yintercept=-log10(0.05))) +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() + geom_hline(aes(yintercept=-log10(0.05))) +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
sum_stat$cluster <- 1
sum_stat$cluster
sum_stat <- sum_stat[!is.na(sum_stat$cluster),]
cat_stat <- sum_stat %>%
group_by(Locus.ID, Chr, BP, cluster) %>%
summarise(Nf=sum(N.Females), Nm=sum(N.Males), N=sum(N.Samples),
Prop.Hom=sum(Prop.Hom*N.Samples, na.rm=T)/sum(N.Samples, na.rm=T),
Prop.Hom.F=sum(Prop.Hom.F*N.Females, na.rm=T)/sum(N.Females, na.rm=T),
Prop.Hom.M=sum(Prop.Hom.M*N.Males, na.rm=T)/sum(N.Males, na.rm=T))
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
f <- fisher.test(as.table(mat), alt="two.sided")
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="two.sided")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() + geom_hline(aes(yintercept=-log10(0.05))) +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "BH")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() + geom_hline(aes(yintercept=-log10(0.05))) +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() + geom_hline(aes(yintercept=-log10(0.01))) +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.05)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
View(odds_chrom)
sum_stat$cluster <- groups$cluster[match(sum_stat$Family, groups$Family)]
sum_stat <- sum_stat[!is.na(sum_stat$cluster),]
cat_stat <- sum_stat %>%
group_by(Locus.ID, Chr, BP, cluster) %>%
summarise(Nf=sum(N.Females), Nm=sum(N.Males), N=sum(N.Samples),
Prop.Hom=sum(Prop.Hom*N.Samples, na.rm=T)/sum(N.Samples, na.rm=T),
Prop.Hom.F=sum(Prop.Hom.F*N.Females, na.rm=T)/sum(N.Females, na.rm=T),
Prop.Hom.M=sum(Prop.Hom.M*N.Males, na.rm=T)/sum(N.Males, na.rm=T))
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="two.sided")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
for(group in unique(odds_list$cluster)){
odds_list$fisher[odds_list$cluster==group] <- p.adjust(odds_list$fisher[odds_list$cluster==group], method = "BH")
}
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
library(dplyr);library(readr);library(ggplot2)
in_args <- commandArgs(trailingOnly = T)
groups_path <- in_args[1]
groups <- read.table(groups_path, header = T)
groups_path <- "../../data/assoc_mapping/mother_groups.tsv"
hom_path <- "../../data/assoc_mapping/grouped_prophom.tsv"
groups <- read.table(groups_path, header = T)
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
#!!!!!! TODO !!!!!!#
# Map families to mother categories
sum_stat$cluster <- groups$cluster[match(sum_stat$Family, groups$Family)]
sum_stat <- sum_stat[!is.na(sum_stat$cluster),]
# Group SNP by mother category
cat_stat <- sum_stat %>%
group_by(Locus.ID, Chr, BP, cluster) %>%
summarise(Nf=sum(N.Females), Nm=sum(N.Males), N=sum(N.Samples),
Prop.Hom=sum(Prop.Hom*N.Samples, na.rm=T)/sum(N.Samples, na.rm=T),
Prop.Hom.F=sum(Prop.Hom.F*N.Females, na.rm=T)/sum(N.Females, na.rm=T),
Prop.Hom.M=sum(Prop.Hom.M*N.Males, na.rm=T)/sum(N.Males, na.rm=T))
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="greater")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher)))  + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "BH")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher)))  + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
sum_stat$cluster <- 1
sum_stat <- sum_stat[!is.na(sum_stat$cluster),]
cat_stat <- sum_stat %>%
group_by(Locus.ID, Chr, BP, cluster) %>%
summarise(Nf=sum(N.Females), Nm=sum(N.Males), N=sum(N.Samples),
Prop.Hom=sum(Prop.Hom*N.Samples, na.rm=T)/sum(N.Samples, na.rm=T),
Prop.Hom.F=sum(Prop.Hom.F*N.Females, na.rm=T)/sum(N.Females, na.rm=T),
Prop.Hom.M=sum(Prop.Hom.M*N.Males, na.rm=T)/sum(N.Males, na.rm=T))
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="greater")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "BH")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher)))  + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher)))  + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
f <- fisher.test(as.table(mat), alt="less")
f <- fisher.test(as.table(mat), alt="less")
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="less")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "BH")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher)))  + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher)))  + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="greater")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
for(group in unique(odds_list$cluster)){
odds_list$fisher[odds_list$cluster==group] <- p.adjust(odds_list$fisher[odds_list$cluster==group], method = "BH")
}
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
f <- fisher.test(as.table(mat), alt="less")
return(f$p.value)
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="less")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
for(group in unique(odds_list$cluster)){
odds_list$fisher[odds_list$cluster==group] <- p.adjust(odds_list$fisher[odds_list$cluster==group], method = "BH")
}
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
f <- fisher.test(as.table(mat), alt="two.sided")
get_fisher <- function(df){
mat <- matrix(as.numeric(df[c(8:11)]), ncol=2)
f <- fisher.test(as.table(mat), alt="two.sided")
return(f$p.value)
}
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
for(group in unique(odds_list$cluster)){
odds_list$fisher[odds_list$cluster==group] <- p.adjust(odds_list$fisher[odds_list$cluster==group], method = "BH")
}
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- cat_stat %>%
rename(Ft = Nf, Mt = Nm, Tt = N) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate_at(funs(round(.,0)), .vars = c("Fo","Fe","Mo","Me"))
odds_list$fisher <- apply(odds_list, 1,  get_fisher)
odds_list$fisher <- p.adjust(odds_list$fisher, method = "bonferroni")
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=-log10(fisher))) + facet_grid(cluster~Chr, scales='free_x') + geom_point() +
geom_hline(aes(yintercept=-log10(0.05))) + geom_hline(aes(yintercept=-log10(0.01)), lty=2, col='red') +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
pack <- c("stringr","dplyr", "readr", "zoo", "ggplot2", "ggjoy", "reshape2")
lapply(pack, require, character.only = TRUE)
geno_path <- "../../data/assoc_mapping/grouped_geno_EOM.tsv"
gen <- read_tsv(geno_path, col_names = T)
centro <- read_tsv("../../data/assoc_mapping/centro/centrolist.tsv")
indv <- read_tsv("../../data/individuals")
indv <- indv %>%
filter(Name %in% colnames(gen)[4:dim(gen)[2]]) %>%
filter(Generation=='F4')
gen <- gen %>%
filter(str_detect(string=Chr, pattern="chr.*"))
big_fam <- indv %>%
group_by(Family) %>%
filter(n()>12)
big_fam <- unique(big_fam$Family)
gen <- gen %>%
group_by(Chr) %>%
merge(centro, by="Chr")
gen <- gen %>%
mutate(centroD=abs(gen$pos - gen$BP)) %>%
select( -pos, -val)
gen <- gen %>% filter_at(vars(indv$Name), any_vars(str_detect(string=.,pattern="[OE]")))
slide_het <- function(seq,dist,w=30,step=1){
zoo_seq <- zoo(seq,order.by = dist)
win_het <- rollapply(zoo_seq,width = w, by=step, align='center', function(x){sum(x=='E')/sum(x %in% c('E','O'))})
return(win_het)
}
full_win <- data.frame()
for(chrom in unique(gen$Chr)){
chr_gen <- gen[gen$Chr==chrom,]
win_chr <- data.frame(lapply(chr_gen[,indv$Name],  function(x) slide_het(x, chr_gen$centroD)))
if(nrow(win_chr)>0){
win_chr$Chr <- chrom
win_chr$centro_dist <- rownames(win_chr);rownames(win_chr) <- NULL
full_win <- rbind(full_win, win_chr)
}
}
full_win <- melt(full_win, measure.vars = indv$Name, id.vars = c("Chr","centro_dist"), variable.name="Name",value.name="Het.")
full_win <- merge(full_win, indv, by="Name")
full_win$centro_dist <- as.numeric(full_win$centro_dist)
genofull= data.frame()
for(size in seq(10000,1000000,10000)){
for ( chrom in unique(gen$Chr)){
chr_start <- centro$pos[centro$Chr==chrom] - size
chr_end <- centro$pos[centro$Chr==chrom] + size
cen_chr <- gen %>%
filter(Chr == chrom & BP > chr_start & BP < chr_end) %>%
select(indv$Name[indv$Generation=='F4'])
chr_prop <- cen_chr %>%
summarise_all(function(x){sum(x=='E')/sum(x %in% c('E','O'))})
chr_loci <- cen_chr %>%
summarise_all(function(x){sum(x %in% c('E','O'))})
cen_chr <- data.frame(t(rbind(chr_prop, chr_loci)))
colnames(cen_chr) <- c("Het.", "Num.Loci")
cen_chr <- cen_chr %>%
tibble::rownames_to_column(var = "Name")%>%
merge(indv, by="Name")
cen_chr <- cen_chr %>%
mutate(centrosize=size, Chr=chrom)
genofull <- rbind(genofull, cen_chr)
}
print(size)
}
full_win <- full_win %>%
group_by(Chr,Family) %>%
mutate(norm_het = (Het. - mean(Het.))/sd(Het.))
ggplot(data=full_win[full_win$Family %in% big_fam,], aes(x=centro_dist, y=Het., col=Name,group=Name)) +
geom_line(stat='smooth', method='loess',alpha=0.3, se=T) + guides(col=FALSE) + facet_grid(Family~Chr)
smoothScatter(genofull$Num.Loci, genofull$Het.)
famorder <- cen_chr %>%
group_by(Family) %>%
summarise(avg=mean(Het.))
cen_chr$Family <- factor(cen_chr$Family, ordered = T, levels = famorder$Family[order(famorder$avg)])
famorder <- cen_chr %>%
group_by(Family) %>%
summarise(avg=mean(Het.))
colnames(cen_chr)
ggplot(data=full_win[full_win$Family %in% big_fam,], aes(x=centro_dist, y=Het., col=Name,group=Name)) +
geom_line(stat='smooth', method='loess',alpha=0.7, se=T) + guides(col=FALSE) + facet_grid(Family~Chr)
ggplot(data=full_win[full_win$Family %in% big_fam,], aes(x=centro_dist, y=Het., col=Name,group=Name)) +
geom_line(stat='smooth', method='loess',alpha=0.5, se=T) + guides(col=FALSE) + facet_grid(Family~Chr)
ggplot(data=full_win[full_win$Family %in% big_fam,], aes(x=centro_dist, y=Het., col=Name,group=Name)) +
geom_line(stat='smooth', method='loess',alpha=0.5, se=F) + guides(col=FALSE) + facet_grid(Family~Chr)
ggplot(data=genofull[genofull$Family %in% big_fam,], aes(x=centrosize, y=Het.,col=as.factor(Name), weight=Num.Loci)) + stat_smooth(method='lm') +
facet_grid(Family~Chr)+ guides(col=FALSE)
ggplot(data=genofull[genofull$Family %in% big_fam,], aes(x=centrosize, y=Het.,col=Name, weight=Num.Loci)) + #stat_smooth(method='lm') +
facet_grid(Family~Chr)+ guides(col=FALSE) + geom_line()
ggplot(data=genofull[genofull$Family %in% big_fam,], aes(x=centrosize, y=Het.,col=Name, weight=Num.Loci)) + stat_smooth(method='loess') +
facet_grid(Family~Chr)+ guides(col=FALSE)
ggplot(data=genofull[genofull$Family %in% big_fam,], aes(x=centrosize, y=Het.,col=Name, weight=Num.Loci)) + geom_point() +
facet_grid(Family~Chr)+ guides(col=FALSE)
View(genofull)
View(genofull)
View(gen)
genofull= data.frame()
for(size in seq(10000,5000000,50000)){
for ( chrom in unique(gen$Chr)){
chr_start <- centro$pos[centro$Chr==chrom] - size
chr_end <- centro$pos[centro$Chr==chrom] + size
cen_chr <- gen %>%
filter(Chr == chrom & BP > chr_start & BP < chr_end) %>%
select(indv$Name[indv$Generation=='F4'])
chr_prop <- cen_chr %>%
summarise_all(function(x){sum(x=='E')/sum(x %in% c('E','O'))})
chr_loci <- cen_chr %>%
summarise_all(function(x){sum(x %in% c('E','O'))})
cen_chr <- data.frame(t(rbind(chr_prop, chr_loci)))
colnames(cen_chr) <- c("Het.", "Num.Loci")
cen_chr <- cen_chr %>%
tibble::rownames_to_column(var = "Name")%>%
merge(indv, by="Name")
cen_chr <- cen_chr %>%
mutate(centrosize=size, Chr=chrom)
genofull <- rbind(genofull, cen_chr)
}
print(size)
}
genofull <- genofull %>%
group_by(Chr, Family) %>%
mutate(norm_het=(Het.-mean(Het., na.rm=T))/sd(Het., na.rm=T))
ggplot(data=genofull[genofull$Family %in% big_fam,], aes(x=centrosize, y=Het.,col=Name, weight=Num.Loci)) + stat_smooth(method='loess') +
facet_grid(Family~Chr)+ guides(col=FALSE)
genofull= data.frame()
for(size in seq(50000,5000000,50000)){
for ( chrom in unique(gen$Chr)){
chr_start <- centro$pos[centro$Chr==chrom] - size
chr_end <- centro$pos[centro$Chr==chrom] + size
cen_chr <- gen %>%
filter(Chr == chrom & BP > chr_start & BP < chr_end) %>%
select(indv$Name[indv$Generation=='F4'])
chr_prop <- cen_chr %>%
summarise_all(function(x){sum(x=='E')/sum(x %in% c('E','O'))})
chr_loci <- cen_chr %>%
summarise_all(function(x){sum(x %in% c('E','O'))})
cen_chr <- data.frame(t(rbind(chr_prop, chr_loci)))
colnames(cen_chr) <- c("Het.", "Num.Loci")
cen_chr <- cen_chr %>%
tibble::rownames_to_column(var = "Name")%>%
merge(indv, by="Name")
cen_chr <- cen_chr %>%
mutate(centrosize=size, Chr=chrom)
genofull <- rbind(genofull, cen_chr)
}
print(size)
}
genofull <- genofull %>%
group_by(Chr, Family) %>%
mutate(norm_het=(Het.-mean(Het., na.rm=T))/sd(Het., na.rm=T))
ggplot(data=genofull[genofull$Family %in% big_fam,], aes(x=centrosize, y=Het.,col=Name, weight=Num.Loci)) + stat_smooth(method='loess') +
facet_grid(Family~Chr)+ guides(col=FALSE)
pack <- c("stringr","dplyr", "readr", "zoo", "ggplot2", "ggjoy", "reshape2")
lapply(pack, require, character.only = TRUE)
geno_path <- "../../data/assoc_mapping/grouped_geno_EOM.tsv"
gen <- read_tsv(geno_path, col_names = T)
centro <- read_tsv("../../data/assoc_mapping/centro/centrolist.tsv")
indv <- read_tsv("../../data/individuals")
indv <- indv %>%
filter(Name %in% colnames(gen)[4:dim(gen)[2]]) %>%
filter(Generation=='F4')
gen <- gen %>%
filter(str_detect(string=Chr, pattern="chr.*"))
big_fam <- indv %>%
group_by(Family) %>%
filter(n()>12)
big_fam <- unique(big_fam$Family)
gen <- gen %>%
group_by(Chr) %>%
merge(centro, by="Chr")
gen <- gen %>%
mutate(centroD=abs(gen$pos - gen$BP)) %>%
select( -pos, -val)
gen <- gen %>% filter_at(vars(indv$Name), any_vars(str_detect(string=.,pattern="[OE]")))
slide_het <- function(seq,dist,w=30,step=1){
zoo_seq <- zoo(seq,order.by = dist)
win_het <- rollapply(zoo_seq,width = w, by=step, align='center', function(x){sum(x=='E')/sum(x %in% c('E','O'))})
return(win_het)
}
full_win <- data.frame()
for(chrom in unique(gen$Chr)){
chr_gen <- gen[gen$Chr==chrom,]
win_chr <- data.frame(lapply(chr_gen[,indv$Name],  function(x) slide_het(x, chr_gen$centroD)))
if(nrow(win_chr)>0){
win_chr$Chr <- chrom
win_chr$centro_dist <- rownames(win_chr);rownames(win_chr) <- NULL
full_win <- rbind(full_win, win_chr)
}
}
full_win <- melt(full_win, measure.vars = indv$Name, id.vars = c("Chr","centro_dist"), variable.name="Name",value.name="Het.")
full_win <- merge(full_win, indv, by="Name")
full_win$centro_dist <- as.numeric(full_win$centro_dist)
genofull= data.frame()
for(size in seq(50000,5000000,50000)){
for ( chrom in unique(gen$Chr)){
chr_start <- centro$pos[centro$Chr==chrom] - size
chr_end <- centro$pos[centro$Chr==chrom] + size
cen_chr <- gen %>%
filter(Chr == chrom & BP > chr_start & BP < chr_end) %>%
select(indv$Name[indv$Generation=='F4'])
chr_prop <- cen_chr %>%
summarise_all(function(x){sum(x=='E')/sum(x %in% c('E','O'))})
chr_loci <- cen_chr %>%
summarise_all(function(x){sum(x %in% c('E','O'))})
cen_chr <- data.frame(t(rbind(chr_prop, chr_loci)))
colnames(cen_chr) <- c("Het.", "Num.Loci")
cen_chr <- cen_chr %>%
tibble::rownames_to_column(var = "Name")%>%
merge(indv, by="Name")
cen_chr <- cen_chr %>%
mutate(centrosize=size, Chr=chrom)
genofull <- rbind(genofull, cen_chr)
}
print(size)
}
