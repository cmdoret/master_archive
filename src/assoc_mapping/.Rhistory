abline(v=chrom_sizes$start, lty=2,col="blue")
compact_chrom <- compact_chrom[compact_chrom$indv>5,]
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='prop. CSD', xlab="genomic position",
main="Proportion of CSD individuals, averaged across families")
mod <- loess(data=compact_chrom, formula=avg~BP, weights = indv, span = 0.05, degree = 2, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',lwd=1.3, col='red')
abline(v=chrom_sizes$start, lty=2,col="blue")
mod <- loess(data=compact_chrom, formula=avg~BP, weights = indv, span = 0.15, degree = 2, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',lwd=1.3, col='red')
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='prop. CSD', xlab="genomic position",
main="Proportion of CSD individuals, averaged across families")
mod <- loess(data=compact_chrom, formula=avg~BP, weights = indv, span = 0.15, degree = 2, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',lwd=1.3, col='red')
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=0.2,labels = chrom_sizes$chrom)
abline(h=0.8)
View(compact_chrom)
View(chrom)
compact_chrom <- chrom[chrom$Family!='J',] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(CSD), indv=length(N.samples), BP=mean(tot_BP)) %>%
arrange(BP)
compact_chrom <- chrom[chrom$Family!='J',] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(CSD), indv=length(N.Samples), BP=mean(tot_BP)) %>%
arrange(BP)
cc < compact_chrom[compact_chrom$indv>5,]
cc <- compact_chrom[compact_chrom$indv>5,]
compact_chrom <- chrom[chrom$Family!='J',] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(CSD), indv=length(unique(Family)), BP=mean(tot_BP)) %>%
arrange(BP)
cc <- compact_chrom[compact_chrom$indv>5,]
compact_chrom <- compact_chrom[compact_chrom$indv>5,]
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='prop. CSD', xlab="genomic position",
main="Proportion of CSD individuals, averaged across families")
mod <- loess(data=compact_chrom, formula=avg~BP, weights = indv, span = 0.15, degree = 2, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',lwd=1.3, col='red')
abline(v=chrom_sizes$start, lty=2,col="blue")
compact_chrom <- chrom[chrom$Family!='J',] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(CSD), indv=length(unique(Family)), BP=mean(tot_BP)) %>%
arrange(BP)
compact_chrom <- compact_chrom[compact_chrom$indv>3,]
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='prop. CSD', xlab="genomic position",
main="Proportion of CSD individuals, averaged across families")
mod <- loess(data=compact_chrom, formula=avg~BP, weights = indv, span = 0.15, degree = 2, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',lwd=1.3, col='red')
abline(v=chrom_sizes$start, lty=2,col="blue")
ggplot(data=chrom,aes(x=BP,y=CSD, col=Family)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.45) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
ggplot(data=chrom[chrom$N.Females>2 & chrom$N.Males>2,],aes(x=BP,y=CSD, col=Family)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.45) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
ggplot(data=chrom[chrom$N.Females>2 & chrom$N.Males>2,],aes(x=BP,y=CSD, col=Family)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.75) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
ggplot(data=chrom[chrom$N.Females>2 & chrom$N.Males>2,],aes(x=BP,y=CSD, col=Family, weights=N.Sample)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.75) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
ggplot(data=chrom[chrom$N.Females>2 & chrom$N.Males>2,],aes(x=BP,y=CSD, col=Family, weights=N.Samples)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.75) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
ggplot(data=chrom[chrom$N.Females>2 & chrom$N.Males>2,],aes(x=BP,y=CSD, col=Family, weight=N.Samples)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.75) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
highCSD <- chrom %>%
group_by(Family) %>%
filter(CSD==max(CSD))
View(highCSD)
plot(highCSD$tot_BP, highCSD$Prop.Hom)
plot(highCSD$tot_BP, highCSD$Prop.Hom, col=Family)
plot(highCSD$tot_BP, highCSD$Prop.Hom, col=highCSD$Family)
plot(highCSD$tot_BP, highCSD$N.Samples, col=highCSD$Family)
abline(v=chrom_sizes$start, lty=2,col="blue")
plot(highCSD$tot_BP, highCSD$CSD, col=highCSD$Family)
top_CSD <- chrom[chrom$CSD>=thresh,]
thresh=0.85
top_CSD <- chrom[chrom$CSD>=thresh,]
hist(top_CSD$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=17,labels = chrom_sizes$chrom)
hist(top_CSD$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab=paste0("N hits >= ", thresh), col="grey")
ggplot(data=chrom[chrom$N.Females>2 & chrom$N.Males>2,],aes(x=BP,y=CSD, col=Family, weight=N.Samples)) +facet_grid(~Chr, scales = "free_x") +
stat_smooth(span=0.75) + geom_vline(data=centro, aes(xintercept=pos), col='blue', lty=2)
uniq_CSD = top_CSD[order(top_CSD[,'tot_BP'],-top_CSD[,'CSD']),]
out_CSD <- uniq_CSD[,c("Locus.ID","Chr","BP", "Family","tot_BP","Nf","Nm","CSD")]
out_CSD <- top_CSD[,c("Locus.ID","Chr","BP", "Family","tot_BP","Nf","Nm","CSD")]
out_CSD <- top_CSD
View(out_CSD)
hom_path <- "../../data/assoc_mapping/grouped_prop_hom_fixed_sites.tsv"
hom_path <- "../../data/assoc_mapping/grouped_prop_hom_fixed_sites.tsv"
sum_stat <- read.table(hom_path, header=T, na.strings='NA', sep='\t')
library(readr)
sum_stat2 <- read_tsv(file=hom_path, col_names=T)
vignette("column-types")
sum_stat2 <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Samples>0,]
sum_stat <- sum_stat2
sum_stat <- sum_stat[sum_stat$N.Samples>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
CSD_like <- sum_stat %>% mutate(CSD=((1-Prop.Hom.F)+Prop.Hom.M)/2)
library(readr)
library(dplyr)
CSD_like <- sum_stat %>% mutate(CSD=((1-Prop.Hom.F)+Prop.Hom.M)/2)
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos <- paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr <- as.factor(chrom$Chr)
chrom$Chr <- droplevels(chrom$Chr)
chrom <- chrom[chrom$N.Females>0 & chrom$N.Males>0,]
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
show_progress()
library(dplyr);library(readr)
hom_path <- "../../data/assoc_mapping/grouped_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft=N.Females, Mt=N.Males, Tt=N.Samples) %>%
mutate(Fo=Ft*Prop.Hom.F, Mo=Mt*Prop.Hom.M,
Fe=Ft*(1-Prop.Hom.F), Me=Mt*(1-Prop.Hom.M),
To=Tt*Prop.Hom, Te=Tt*(1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M)
odds_list <- sum_stat %>%
rename(Ft=N.Females, Mt=N.Males, Tt=N.Samples) %>%
mutate(Fo=Ft*Prop.Hom.F, Mo=Mt*Prop.Hom.M,
Fe=Ft*(1-Prop.Hom.F), Me=Mt*(1-Prop.Hom.M),
To=Tt*Prop.Hom, Te=Tt*(1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo=Ft*To, EMo=Mt*To, EFe=Ft*Te, EMe=Mt*Te) %>%
mutate(chi2=(Fo-EFo)/EFo+(Mo-EMo)/EMo+(Fe-EFe)/EFe+(Me-EMe)/EMe)
library(dplyr);library(readr);library(ggplot2)
ggplot(data=odds_list, aes(x=BP, y=chi2)) + facet_grid(~Chr) + geom_point()
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=chi2)) + facet_grid(Family~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=chi2)) + facet_grid(~Chr) + geom_point()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=chi2)) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=chi2)) + facet_grid(Family~Chr) + geom_point()
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2))/sd(chi2))
ggplot(data=odds_chrom, aes(x=BP, y=chi2)) + facet_grid(Family~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2)) + facet_grid(Family~Chr) + geom_point()
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T))
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2)) + facet_grid(Family~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_point()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, log.p = T))
pchisq(2, df = 1, log.p = T)
View(odds_chrom)
View(odds_list)
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, log.p = T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T))
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T))
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
View(sum_stat)
View(odds_list)
chi2
odds_list$chi2
sort(odds_list$chi2)
tail(sort(odds_list$chi2))
pchisq(289, df=1)
pchisq(289, df=1, lower.tail = T)
pchisq(49, df=1)
pchisq(49000, df=1)
pchisq(0.0021, df=1)
rchisq(n=10000, df=1)
hist(rchisq(n=10000, df=1))
qchisq(0.99, df=1)
qchisq(0.01, df=1)
pchisq(298, df=1)
pchisq(298123123, df=1)
pchisq(298123123, df=1, lower.tail = T)
pchisq(298123123, df=1, lower.tail = F)
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, lower.tail=F))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T))
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T))
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T)) %>%
mutate(pval = pchisq(chi2, df = 1, lower.tail=F, log.p=T))
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (chi2 - mean(chi2, na.rm=T))/sd(chi2, na.rm=T)) %>%
mutate(pval = pchisq(norm_chi2, df = 1, lower.tail=F, log.p=T))
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, lower.tail=F, log.p=T))
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (pval - mean(pval, na.rm=T))/sd(pval, na.rm=T))
ggplot(data=odds_chrom, aes(x=BP, y=pval, col=Family)) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_line()
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_histogram()
ggplot(data=odds_chrom, aes(x=norm_chi2, col=Family)) + facet_grid(~Chr) + geom_histogram()
ggplot(data=odds_chrom, aes(x=pval, col=Family)) + facet_grid(~Chr) + geom_histogram()
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
odds_chrom <- odds_chrom %>%
group_by(Family) %>%
mutate(norm_chi2 = (pval - mean(pval, na.rm=T))/sd(pval, na.rm=T))
ggplot(data=odds_chrom, aes(x=pval, col=Family)) + facet_grid(~Chr) + geom_histogram()
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=pval)) + facet_grid(~Chr) + geom_point()
hom_path <- "../../data/assoc_mapping/grouped_pooled_output_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
hom_path <- "../../data/assoc_mapping/grouped_pooled_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
hom_path <- "../../data/assoc_mapping/grouped_outpool_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "icidddddd")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "icidddddd")
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "icidddddd")
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = pchisq(chi2, df = 1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=pval)) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr) + geom_point()
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr) + geom_point() + stat_smooth()
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr) + geom_point() + stat_smooth(span=0.15)
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr) + geom_point() + stat_smooth(span=0.25)
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point()
pchisq(1, df = 1, lower.tail=F, log.p=F)
log10(0.3173105)
pchisq(1, df = 1, lower.tail=F, log.p=T)
log2(0.3173105)
ln(0.3173105)
e^pchisq(1, df = 1, lower.tail=F, log.p=T)
exp(log2(0.3173105))
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log10(pchisq(chi2, df = 1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log2(pchisq(chi2, df = 1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log10(pchisq(chi2, df = 1, lower.tail=F, log.p=T)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = (pchisq(chi2, df = 1, lower.tail=F, log.p=T)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log(pchisq(chi2, df = 1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
warniing()
warnings()
pchisq(1, df = 1, lower.tail=F, log.p=F)
pchisq(1, df = 1, lower.tail=F, log.p=T)
log(pchisq(1, df = 1, lower.tail=F, log.p=F))
hom_path <- "../../data/assoc_mapping/grouped_outpool_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log(pchisq(chi2, df = 1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) log(pchisq(x, df=1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = log(odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=F))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval
odds_list$pval <- sapply(X = odds_list$chi2, function(x) log(pchisq(x, df=1, lower.tail=F, log.p=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
View(sum_stat)
View(odds_chrom)
odds_list$pval[is.infinite(odds_list$pval)] <- 700
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
hom_path <- "../../data/assoc_mapping/grouped_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval), col=Family)) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
hom_path <- "../../data/assoc_mapping/grouped_outpool_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log2 p-value") + ggtitle("Case-control associaiton test for CSD")
.Machine$double.neg.eps
log(.Machine$double.neg.eps)
.Machine
?.Machine
