ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = (pchisq(chi2, df = 1, lower.tail=F, log.p=T)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log(pchisq(chi2, df = 1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
warniing()
warnings()
pchisq(1, df = 1, lower.tail=F, log.p=F)
pchisq(1, df = 1, lower.tail=F, log.p=T)
log(pchisq(1, df = 1, lower.tail=F, log.p=F))
hom_path <- "../../data/assoc_mapping/grouped_outpool_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe) %>%
mutate(pval = log(pchisq(chi2, df = 1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) log(pchisq(x, df=1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = log(odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=F))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval
odds_list$pval <- sapply(X = odds_list$chi2, function(x) log(pchisq(x, df=1, lower.tail=F, log.p=F)))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
View(sum_stat)
View(odds_chrom)
odds_list$pval[is.infinite(odds_list$pval)] <- 700
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
hom_path <- "../../data/assoc_mapping/grouped_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval), col=Family)) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
hom_path <- "../../data/assoc_mapping/grouped_outpool_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
odds_list <- sum_stat %>%
rename(Ft = N.Females, Mt = N.Males, Tt = N.Samples) %>%
mutate(Fo = Ft * Prop.Hom.F, Mo = Mt * Prop.Hom.M,
Fe = Ft * (1-Prop.Hom.F), Me = Mt * (1-Prop.Hom.M),
To = Tt * Prop.Hom, Te = Tt * (1-Prop.Hom)) %>%
select(-Prop.Hom, -Prop.Hom.F, -Prop.Hom.M) %>%
mutate(EFo = Ft * To, EMo = Mt * To, EFe = Ft * Te, EMe = Mt * Te) %>%
mutate(chi2 = (Fo-EFo)^2/EFo + (Mo-EMo)^2/EMo + (Fe-EFe)^2/EFe + (Me-EMe)^2/EMe)
odds_list$pval <- sapply(X = odds_list$chi2, function(x) pchisq(x, df=1, lower.tail=F, log.p=T))
odds_chrom <- odds_list[grep("chr.*",odds_list$Chr),]
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log10 p-value") + ggtitle("Case-control associaiton test for CSD")
ggplot(data=odds_chrom, aes(x=BP, y=abs(pval))) + facet_grid(~Chr, scales='free_x') + geom_point() +
xlab("Genomic position") + ylab("-log2 p-value") + ggtitle("Case-control associaiton test for CSD")
.Machine$double.neg.eps
log(.Machine$double.neg.eps)
.Machine
?.Machine
hom_path <- "../../data/assoc_mapping/grouped_outpool_prop_hom_fixed_sites.tsv"
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
library(dplyr)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
scenario <- 2  # Number of CSD loci considered
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
View(off_comp)
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
off_comp
2^scenario-1
scenario-1
View(off_comp)
1/(2^scenario)
print(off_comp)
plot(off_comp$prop_males,off_comp$Count, xlab="Proportion of males",
ylab="Number of 2N offspring", main="Proportion of males versus total diploid offpsring")
seq(1,scenario)
Map(seq(1,scenario),f=2^x)
Map(seq(1,scenario),f=function(x) 2^x)
n2 <- c(1,1,2)
n3 <- c(1,1,1,2,2,2,3)
n4 <- c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4)
n4
table(n4)
table(n2)
table(n3)
table(n4)
n4 <- c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,4)
table(n4)
seq(1,scenario)
Map(seq(1,scenario),f=function(x) 2^x)
Map(seq(1,scenario),f=function(x)1/ 2^x)
centers <- Map(seq(1,scenario),f=function(x)1/ 2^x)
centers
centers <- as.vector(Map(seq(1,scenario),f=function(x)1/ 2^x,))
centers <- as.vector(Map(seq(1,scenario),f=function(x)1/ 2^x))
centers
as.
centers <- vector(Map(seq(1,scenario),f=function(x)1/ 2^x))
centers <- unlist(Map(seq(1,scenario),f=function(x)1/ 2^x))
centers
scenario
pascalTriangle <- function(h) {
for(i in 0:(h-1)) {
s <- ""
for(k in 0:(h-i)) s <- paste(s, "  ", sep="")
for(j in 0:i) {
s <- paste(s, sprintf("%3d ", choose(i, j)), sep="")
}
print(s)
}
}
pascalTriangle(3)
centers <- unlist(Map(seq(1,scenario),f=function(x)1/ 2^x))
x <- 3
print(x)
for (i in 1:10) { x <- c(0, x) + c(x, 0); print(x) }
x <- 1
print(x)
for (i in 1:10) { x <- c(0, x) + c(x, 0); print(x) }
x <- 0
print(x)
for (i in 1:10) { x <- c(0, x) + c(x, 0); print(x) }
x <- 1
print(x)
for (i in 1:10) { x <- c(0, x) + c(x, 0); print(x) }
for (i in 1:scenario) { x <- c(0, x) + c(x, 0); print(x) }
x <- 1
print(x)
for (i in 1:scenario) { x <- c(0, x) + c(x, 0); print(x) }
x <- 1
for (i in 1:scenario) { x <- c(0, x) + c(x, 0); print(x) }
x
scenario
centers <- c[2:]
centers <- x[2:]
centers <- x[2:length(x)]
centers
rep(c(1,2,3), each=c(1,1,10))
rep(c(1,2,3), c(1,1,10))
rep(c(1,2,3), times=c(1,1,10))
seq(1,scenario)
centers <- unlist(Map(rep(seq(1,scenario),times=centers),f=function(x) 1/2^x))
centers
matrix(ncol = 2, data = list(rnorm(n=10, mean=3, sd=5), rnorm(n=10, mean=3, sd=5))
)
matrix(ncol = 2, data = list(as.vector(rnorm(n=10, mean=3, sd=5)), as.vector(rnorm(n=10, mean=3, sd=5)))
)
matrix(ncol = 2, data = list(rnorm(n=10, mean=3, sd=5), rnorm(n=10, mean=3, sd = 5))
)
matrix(ncol = 2, data = rnorm(n=20, mean=3, sd=5))
test_data <- matrix(ncol = 2, data = rnorm(n=20, mean=3, sd=5))
plot(test_data)
kmeans(test_data, centers = list(c(2,2), c(2,2)))
kmeans(test_data, centers = list(c(2,2), c(2,3)))
het_geno <- length(x)-1  # First value is only homozygous loci
centers <- length(x)-1  # First value is only homozygous loci
centers
centers <- length(x)  # First value is only homozygous loci
centers
x
centers <- sum(x[1:length(x)])  # First value is only homozygous loci
centers
centers <- sum(x[2:length(x)])  # First value is only homozygous loci
centers
centers <- sum(x[2:length(x)])  # First value is only homozygous loci
centers
2^scenario-1
scenario
scenario <- 3
ngroups <- 2^scenario-1
ngroups
exp_prop <- 1/(2^scenario)
exp_prop
scenario=2
ngroups <- 2^scenario-1
kmeans(off_comp,centers = ngroups)
off_comp
kmeans(off_comp$prop_males,centers = ngroups)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
scenario <- 2  # Number of CSD loci considered
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
off_comp
diplo
off_comp
library(dplyr)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
scenario <- 2  # Number of CSD loci considered
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
off_comp
ngroups <- 2^scenario-1
kmeans(off_comp$prop_males,centers = ngroups)
hist(off_comp$prop_males,breaks=10, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families")
km_output <- kmeans(off_comp$prop_males,centers = ngroups)
abline(v=km_output$centers, col='red',lty=2)
km_output$cluster
hist(off_comp$prop_males,breaks=10, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families", col=km_output$cluster)
abline(v=km_output$centers, col='red',lty=2)
hist(off_comp$prop_males,breaks=30, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families", col=km_output$cluster)
abline(v=km_output$centers, col='red',lty=2)
plot(off_comp$prop_males,off_comp$Count, xlab="Proportion of males",
ylab="Number of 2N offspring", main="Proportion of males versus total diploid offpsring")
hist(off_comp$prop_males,breaks=30, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families", col=km_output$cluster)
off_comp$cluster <- km_output$cluster
hist(off_comp$prop_males,breaks=30, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families", col=km_output$cluster)
off_comp[order(off_comp$prop_males)]
off_comp[order(off_comp$prop_males),]
off_comp <- off_comp[order(off_comp$prop_males),]
hist(off_comp$prop_males,breaks=30, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families", col=km_output$cluster)
abline(v=km_output$centers, col='red',lty=2)
library(dplyr);library(ggplot2)
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
ngroups <- 2^scenario-1
km_output <- kmeans(off_comp$prop_males,centers = ngroups)
off_comp$cluster <- km_output$cluster
ggplot(data=off_comp, aes(x=prop_males, fill=cluster)) + geom_histogram()
ggplot(data=off_comp, aes(x=prop_males, col=cluster)) + geom_histogram()
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram()
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
hist(off_comp$prop_males,breaks=30, main="Male proportion in each family",
xlab="Proportion of males", ylab="Number of families", col=as.factor(km_output$cluster))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(aes(xintercept=km_output$centers, col='red', lty=2))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(aes(xintercept=km_output$centers), col='red', lty=2)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(data=km_output, aes(xintercept=centers), col='red', lty=2)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(data=km_output$centers, aes(xintercept=centers), col='red', lty=2)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(inherit.aes=F, aes(xintercept=km_output$centers), col='red', lty=2)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(aes(xintercept=km_output$centers,inherit.aes=F), col='red', lty=2)
matrix(km_output$centers)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(data=matrix(km_output$centers),aes(xintercept=1), col='red', lty=2)
data.frame(km_output$centers)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),aes(xintercept=km_output.centers), col='red', lty=2)
# This script groups mothers based on the proportion of males among their diploid offspring.
# These different groups will have different combination of heterozygous CSD loci.
# Cyril Matthey-Doret
# 30.07.2017
#==== LOADING DATA ====#
library(dplyr);library(ggplot2)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
scenario <- 2  # Number of CSD loci considered
#==== PROCESSING ====#
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
#=== CLUSTERING ===#
# Expected number of categories is a function of the number of CSD loci
ngroups <- 2^scenario-1
# exp_prop <- 1/(2^scenario)
# Using Pascal's triangle to get count of genotypes
# with n het loci where 0 < n <= scenario
# Note: n < 0 since 0 het loci lead to male
#x <- 1
#for (i in 1:scenario) { x <- c(0, x) + c(x, 0)}
# Number of centers for k-means clustering
#centers <- sum(x[2:length(x)])  # First value is only homozygous loci
km_output <- kmeans(off_comp$prop_males,centers = ngroups)
off_comp$cluster <- km_output$cluster
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),aes(xintercept=km_output.centers), col='red', lty=2)
abline(v=km_output$centers, col='red',lty=2)
plot(off_comp$prop_males,off_comp$Count, xlab="Proportion of males",
ylab="Number of 2N offspring", main="Proportion of males versus total diploid offpsring")
# Arbitrary cutoff needed here
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion in each family") + xlab("Proportion of males") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),aes(xintercept=km_output.centers), col='red', lty=2)
off_comp$cluster
km_output$
ceiling()
km_output$centers
0.688*0.347
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(breaks=c("1a","1b","2"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(breaks=c("1a","1","2"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(breaks=c("1a","1b","2a"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(names=c("1a","1b","2a"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(name="Heterozygous loci")
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(name="Heterozygous loci", labels=c("a","b", "a+b"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(name="Heterozygous loci", labels=c("a+b","a", "b+b"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(name="Heterozygous loci", labels=c("a+b","a", "b"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b"))
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families")
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw()
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families")
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families")
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),
aes(xintercept=km_output.centers), col='red', lty=2)
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),aes(xintercept=km_output.centers), col='red', lty=2)
km_output$centers
data.frame(km_output$centers)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),
aes(xintercept=km_output.centers), col='red', lty=2)
library(dplyr);library(ggplot2)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
scenario <- 2  # Number of CSD loci considered
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
ngroups <- 2^scenario-1
library(dplyr);library(readr);library(ggplot2)
groups_path <- "../../data/assoc_mapping/mother_groups.tsv"
hom_path <- "../../data/ploidy/thresholds/fixed"
library(dplyr);library(readr);library(ggplot2)
groups <- read.table(groups_path, header = T)
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
hom_path <- "../../data/assoc_mapping/grouped_prop_hom_fixed_sites.tsv"
groups <- read.table(groups_path, header = T)
sum_stat <- read_tsv(file=hom_path, col_names=T, col_types = "iciddddddc")
sum_stat <- sum_stat[sum_stat$N.Males>0 & sum_stat$N.Females>0,]
sum_stat <- sum_stat[!is.na(sum_stat$Prop.Hom),]
sum_stat$cluster <- groups$cluster[match(sum_stat$Family, groups$Family)]
cat_stat <- sum_stat %>%
group_by(Locus.ID, Chr, BP, cluster) %>%
summarise(N.Females=sum(N.Females), N.Males=sum(N.Males),
N.Samples=sum(N.Samples),
Prop.Hom=sum(Prop.Hom*N.Samples, na.rm=T)/sum(N.Samples, na.rm=T),
Prop.Hom.F=sum(Prop.Hom.F*N.Females, na.rm=T)/sum(N.Females, na.rm=T),
Prop.Hom.M=sum(Prop.Hom.M*N.Males, na.rm=T)/sum(N.Males, na.rm=T))
cat_stat
library(dplyr);library(ggplot2)
args_list <- commandArgs(trailingOnly = T)
scenario=2
indv <- "../../data/ploidy/thresholds/fixed"
indv <- read.table(indv, header=T)
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
ngroups <- 2^scenario-1
km_output <- kmeans(off_comp$prop_males,centers = ngroups)
off_comp$cluster <- km_output$cluster
write.table(off_comp, out, sep='\t', row.names=F, quote=F)
ggplot(data=off_comp, aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),
aes(xintercept=km_output.centers), col='red', lty=2)
View(off_comp)
ggplot(data=off_comp[off_comp$Count>3,], aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),
aes(xintercept=km_output.centers), col='red', lty=2)
ggplot(data=off_comp[off_comp$Count>4,], aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),
aes(xintercept=km_output.centers), col='red', lty=2)
ggplot(data=off_comp[off_comp$Count>2,], aes(x=prop_males, fill=as.factor(cluster))) + geom_histogram() +
ggtitle("Male proportion per family") + xlab("Proportion of males") + theme_bw() +
scale_fill_discrete(name="Heterozygous loci", labels=c("a","a+b", "b")) + ylab("Number of families") +
ylab("Number of families") + geom_vline(data=data.frame(km_output$centers),
aes(xintercept=km_output.centers), col='red', lty=2)
