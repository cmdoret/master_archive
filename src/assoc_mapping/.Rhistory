female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Het', 'fam', 'N')]
CSD_like <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
#CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)*(CSD_like$N.x+CSD_like$N.y)/2
CSD_like$CSD <- (CSD_like$Obs.Hom+CSD_like$Obs.Het)/2
CSD_like <- rename(CSD_like, Nm=N.x,Nf=N.y, Male.Hom=Obs.Hom, Fem.Het=Obs.Het)
#CSD_like <- CSD_like[CSD_like$Nf>1 & CSD_like$Nm>1,]
# Keeping only chromosomes (removing contigs)
CSD_like <- CSD_like %>% arrange(Chr, BP)
chrom <- CSD_like[grep("chr.*", CSD_like$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
# Finding genomic position of SNPs
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(CSD), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='prop. CSD', xlab="genomic position",
main="Proportion of CSD individuals, averaged across families")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=0.2,labels = chrom_sizes$chrom)
highCSD <- chrom %>%
group_by(fam) %>%
filter(CSD==max(CSD))
top_CSD <- chrom[chrom$CSD>=0.8,]
hist(top_CSD$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=17,labels = chrom_sizes$chrom)
ggplot(data=chrom[chrom$Nm>1 & chrom$Nf>1,], aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + #geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
ylab("Prop.CSD")
ggplot(data=chrom, aes(x=tot_BP, y=CSD))+ geom_line() +
facet_wrap(~fam,drop = F) + #geom_text(data=highCSD,aes(label=pos, y=CSD), size=1.9)+
geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
ylab("Prop.CSD")
indv <- read.table("../../data/ploidy/vcftools/summary_full.txt")
indv <- read.table("../../data/ploidy/vcftools/summary_full.txt")
indv <- read.table("../../data/ploidy/vcftools/summary_full.txt",header = =T)
indv <- read.table("../../data/ploidy/vcftools/summary_full.txt",header = T)
View(indv)
plot(indv$N_SITES,indv$MEAN_DEPTH)
indv <- read.table("../../data/ploidy/thresholds/fixed",header = T)
plot(indv$N_SITES,indv$MEAN_DEPTH)
mother <- indv[indv$Generation=="F3",]
offspring <- indv[indv$Generation=="F4",]
prop_males <- function(mother,offspring){
# Given a mother (row of dataframe), compute the proportion of males
# among its dipoid offspring from the "offspring" dataframe and return it.
diplo <- offpsring[offspring$Ploidy=='D' & offspring$Family==mother$Family,]
male2N <- diplo[diplo$Sex=="M",]
return(nrow(male2N)/nrow(diplo))
}
prop_males <- function(mother){
# Given a mother (row of dataframe), compute the proportion of males
# among its dipoid offspring from the "offspring" dataframe and return it.
diplo <- offpsring[offspring$Ploidy=='D' & offspring$Family==mother$Family,]
male2N <- diplo[diplo$Sex=="M",]
return(nrow(male2N)/nrow(diplo))
}
mother$prop_males = apply(mother,MARGIN = 1,FUN=prop_males)
prop_males <- function(mother){
# Given a mother (row of dataframe), compute the proportion of males
# among its dipoid offspring from the "offspring" dataframe and return it.
diplo <- offspring[offspring$Ploidy=='D' & offspring$Family==mother$Family,]
male2N <- diplo[diplo$Sex=="M",]
return(nrow(male2N)/nrow(diplo))
}
mother$prop_males = apply(mother,MARGIN = 1,FUN=prop_males)
prop_males <- function(mother){
# Given a mother (row of dataframe), compute the proportion of males
# among its dipoid offspring from the "offspring" dataframe and return it.
diplo <- offspring[offspring$Ploidy=='D' & offspring$Family==mother["Family"],]
male2N <- diplo[diplo$Sex=="M",]
return(nrow(male2N)/nrow(diplo))
}
mother$prop_males = apply(mother,MARGIN = 1,FUN=prop_males)
mother
hist(mother$prop_males)
View(indv)
indv <- read.table("../../data/ploidy/thresholds/fixed",header = T)
View(indv)
plot(mother$prop_males,1)
plot(mother$prop_males,rep(1))
plot(mother$prop_males,rep(1,nrow(mother)))
hist(mother$prop_males,braks=10)
hist(mother$prop_males,breaks=10)
hist(mother$prop_males,breaks=10)
plot(indv$MEAN_DEPTH,indv$MEAN_DEPTH)
plot(indv$MEAN_DEPTH,indv$N_SITES)
hist(indv$MEAN_DEPTH)
hist(indv$MEAN_DEPTH,breaks=20)
hist(indv$MEAN_DEPTH,breaks=20, main="Mean depth per individual", xlab="Mean depth")
plot(indv$MEAN_DEPTH,indv$N_SITES)
hist(indv$N_SITES)
hist(indv$N_SITES, breaks=20)
hist(mother$prop_males,breaks=10)
library(dplyr)
library(readr)
library(ggplot2)
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann")
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
colnames(chrom_sizes) <- c("chrom","start","length")
phi_path <- '../../data/populations/d-20_r-80/'
phi_path <- '../../data/populations/haplo_d-20_r-80/'
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
View(chrom_sizes)
text(x = chrom_sizes$mid,y=0.2,labels = chrom_sizes$chrom)
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann", stringsAsFactors = F)
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
rownames(chrom_sizes) <- NULL
colnames(chrom_sizes) <- c("chrom","start","length")
chrom_sizes$length <- as.numeric(chrom_sizes$length)
chrom_sizes$mid <- chrom_sizes$start + (chrom_sizes$length/2)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=0.2,labels = chrom_sizes$chrom)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
compact_chrom
sorted(compact_chrom$BP)
order(compact_chrom$BP)
order(compact_chrom$avg)
compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
chrom$tot_BP[chrom$Locus.ID== hit_ID]
hit_ID
chrom$tot_BP[chrom$Locus.ID %in% hit_ID]
compact_chrom$avg[compact_chrom$Locus.ID
compact_chrom$avg[compact_chrom$Locus.ID]
compact_chrom$avg[compact_chrom$Locus.ID] %in% hit_ID]
compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID]
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst.))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line() + facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Smoothed.Fst.))
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst.))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line() + facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)
top_Fst<- chrom[chrom$Fst.>=0.8,]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
View(chrom)
top_Fst<- chrom[chrom$Fst.>=0.6,]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
View(chrom)
top_Fst<- chrom[chrom$Fst.>=0.4]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
top_Fst<- chrom[chrom$Fst.>=0.2]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
top_Fst<- chrom[chrom$Fst.>=0.]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
top_Fst<- chrom[chrom$Fst.>=0.8]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
top_Fst<- chrom[chrom$Fst.>=0.4,]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
top_Fst<- chrom[chrom$Fst.>=0.2,]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
top_Fst<- chrom[chrom$Fst.>=0.7,]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
uniq_Fst = top_Fst[order(top_Fst[,'tot_BP'],-top_Fst[,'Fst.']),]
uniq_Fst$tot_BP <- round(uniq_Fst$tot_BP,digits=-3)
uniq_Fst$BP <- round(uniq_Fst$BP,digits=-3)
uniq_Fst = uniq_Fst[!duplicated(uniq_Fst$tot_BP),]
out_Fst <- uniq_Fst[,c("Locus.ID","Chr","BP","tot_BP")]
library(dplyr)
library(readr)
library(ggplot2)
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann", stringsAsFactors = F)
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
rownames(chrom_sizes) <- NULL
colnames(chrom_sizes) <- c("chrom","start","length")
chrom_sizes$length <- as.numeric(chrom_sizes$length)
chrom_sizes$mid <- chrom_sizes$start + (chrom_sizes$length/2)
phi_path <- '../../data/populations/haplo_d-20_r-80/'
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Smoothed.Fst.))
0
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst.))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line() + facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)
top_Fst<- chrom[chrom$Fst.>=0.7,]
hist(top_Fst$tot_BP,breaks=100, main="Top CSD candidates", xlab="Genomic position", ylab="N hits >= 0.8", col="grey")
abline(v=chrom_sizes$start, lty=2,col="blue")
uniq_Fst = top_Fst[order(top_Fst[,'tot_BP'],-top_Fst[,'Fst.']),]
uniq_Fst$tot_BP <- round(uniq_Fst$tot_BP,digits=-3)
uniq_Fst$BP <- round(uniq_Fst$BP,digits=-3)
uniq_Fst = uniq_Fst[!duplicated(uniq_Fst$tot_BP),]
out_Fst <- uniq_Fst[,c("Locus.ID","Chr","BP","tot_BP")]
out_Fst
top_Fst
table(top_Fst$tot_BP)
uniq_Fst = top_Fst[order(top_Fst[,'tot_BP'],-top_Fst[,'Fst.']),]
table(uniq$tot_BP)
table(uniq_Fst$tot_BP)
uniq_Fst$tot_BP <- round(uniq_Fst$tot_BP,digits=-3)
uniq_Fst$BP <- round(uniq_Fst$BP,digits=-3)
table(uniq_Fst$tot_BP)
table(uniq_Fst$BO)
table(uniq_Fst$BP
)
uniq_Fst
library(dplyr)
library(readr)
library(ggplot2)
scaffolds <- read.table("../../data/ref_genome/ordered_genome/merged.fasta.ann", stringsAsFactors = F)
chrom_sizes <- data.frame(); chrom_names=c()
for(row in seq(1,nrow(scaffolds))){
if(length(grep('chr',scaffolds[row,2]))){
chrom_names <- append(chrom_names,as.character(scaffolds[row,2]))
chrom_sizes <- rbind(chrom_sizes, scaffolds[row+1,c(1,2)])
}
}
chrom_sizes <- cbind(chrom_names, chrom_sizes)
rownames(chrom_sizes) <- NULL
colnames(chrom_sizes) <- c("chrom","start","length")
chrom_sizes$length <- as.numeric(chrom_sizes$length)
chrom_sizes$mid <- chrom_sizes$start + (chrom_sizes$length/2)
phi_path <- '../../data/populations/haplo_d-20_r-80/'
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Smoothed.Fst.))
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst.))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line() + facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)
View(highFST)
chrom
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
highFST <- chrom %>%
group_by(fam) %>%
filter(Fst.==max(Fst.))
View(highFST)
highFST <- chrom %>%
group_by(fam) %>%
filter(Smoothed.Fst.==max(Smoothed.Fst.))
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst.))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line() + facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
compact_chrom <- chrom[chrom$fam!="J",] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
compact_chrom <- chrom[chrom$fam!="J",] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
points(compact_chrom$BP,compact_chrom$avg,type="l",lty=2,col="blue")
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
for(f in LETTERS[1:12]){
compact_chrom <- chrom[chrom$fam!=f,] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
points(compact_chrom$BP,compact_chrom$avg,type="l",lty=2)
}
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
i=0
for(f in LETTERS[1:12]){
i=i+1
compact_chrom <- chrom[chrom$fam!=f,] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
points(compact_chrom$BP,compact_chrom$avg,type="l",lty=2,col=i)
}
f="J"
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
compact_chrom <- chrom[chrom$fam!=f,] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
points(compact_chrom$BP,compact_chrom$avg,type="l",lty=2,col=i)
phi_path <- '../../data/populations/d-20_r-80/'
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
# Keeping only chromosomes (removing contigs)
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
# Finding genomic position of SNPs
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
compact_chrom <- chrom[chrom$fam!=f,] %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
points(compact_chrom$BP,compact_chrom$avg,type="l",lty=2,col=i)
phi_path <- '../../data/populations/haplo_d-20_r-80/'
phi_path <- '../../data/populations/haplo_d-20_r-80/'
phi_stat <- data.frame()
for(fam in list.dirs(phi_path)[2:length(list.dirs(phi_path))]){  # Excluding first dir (parent)
tmp_phi <- read.csv(paste0(fam,'/batch_0.phistats_F-M.tsv'),header=T,skip=2,sep='\t')
tmp_phi$fam <- rep(basename(fam))
phi_stat <- rbind(phi_stat, tmp_phi)
}
# Keeping only chromosomes (removing contigs)
phi_stat <- phi_stat %>% arrange(Chr, BP)
chrom <- phi_stat[grep("chr.*", phi_stat$Chr),]
chrom$pos = paste(chrom$Chr,chrom$BP, sep="_")
chrom$Chr=droplevels(chrom$Chr)
# Finding genomic position of SNPs
genomic_pos <- function(snp){
# Computing total basepair position in genome as start(chrom)+bp
gen_pos <- as.numeric(snp["BP"]) + chrom_sizes[chrom_sizes$chr==snp["Chr"],"start"]
return(gen_pos)
}
chrom$tot_BP <-apply(X = chrom,MARGIN = 1, FUN=genomic_pos)
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
plot(compact_chrom$BP, compact_chrom$avg, type="l", ylab='Fst', xlab="genomic position")
abline(v=chrom_sizes$start, lty=2,col="blue")
text(x = chrom_sizes$mid,y=-0.2,labels = chrom_sizes$chrom)
hit_ID <-compact_chrom$Locus.ID[order(compact_chrom$avg,decreasing = T)][1:3]
text(x = chrom$tot_BP[chrom$Locus.ID %in% hit_ID],
y= compact_chrom$avg[compact_chrom$Locus.ID %in% hit_ID],
labels = chrom$pos[chrom$Locus.ID %in% hit_ID])
compact_chrom <- chrom %>%
group_by(Locus.ID) %>%
summarise(avg=mean(Smoothed.Fst.), BP=mean(tot_BP)) %>%
arrange(BP)
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst.))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line() + facet_wrap(~fam,drop = F) + geom_text(data=highFST,aes(label=pos, y=Fst.+0.2), size=1.9)
ggplot(data=chrom, aes(x=tot_BP, y=Smoothed.Fst., col=fam))+ geom_vline(data=chrom_sizes, aes(xintercept=start), col="blue", lty=2) +
geom_line()
