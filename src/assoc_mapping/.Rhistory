for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in seq(0.4,4,0.1)){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l')
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col='red')
}
}
library(viridis)
install.packages('viridis')
library(viridis)
viridis
viridis()
viridis(n=1)
viridis(n=2)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=virilist[colindex])
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=virilist[colindex])
colindex <- colindex+1
}
}
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=virilist[colindex])
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=virilist[colindex])
colindex <- colindex+1
}
colindex <- 1
}
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=virilist[colindex], alpha=0.4)
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=virilist[colindex])
colindex <- colindex+1
}
colindex <- 1
}
warnings()
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4))
colindex <- colindex+1
}
colindex <- 1
}
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4),pch=16)
colindex <- colindex+1
}
colindex <- 1
}
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4),pch=16, size=3)
colindex <- colindex+1
}
colindex <- 1
}
warnings()
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4),pch=16, cex=3)
colindex <- colindex+1
}
colindex <- 1
}
library(viridis)
sp_range <- seq(0.4,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4),pch=16, cex=1.5)
colindex <- colindex+1
}
colindex <- 1
}
library(viridis)
sp_range <- seq(0.3,4,0.1)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4),pch=16, cex=1.5)
colindex <- colindex+1
}
colindex <- 1
}
library(dplyr)
indv <- read.table("../../data/ploidy/thresholds/fixed", header=T)
diplo <- indv[indv$Generation=="F4" & indv$Ploidy=='D',]
off_comp <- data.frame(table(diplo$Family, diplo$Sex))
colnames(off_comp) <- c("Family", "Sex", "Count")
off_comp <- off_comp %>%
group_by(Family) %>%
mutate(prop_males=round(Count[Sex=='M']/sum(Count),3)) %>%
filter(Sex=='M') %>%
select(-Sex)
kmeans(off_comp$prop_males)
kmeans(off_comp$prop_males,centers=3)
kmeans(off_comp$prop_males,centers=2)
View(off_comp)
kmeans(off_comp$prop_males,centers=3)
k <- kmeans(off_comp$prop_males,centers=3)
k$cluste
k$cluster
table(k$cluster)
kmeans(off_comp$prop_males,centers=3)$cluster
table(kmeans(off_comp$prop_males,centers=3)$cluster)
table(kmeans(off_comp$prop_males,centers=2)$cluster)
table(kmeans(off_comp$prop_males,centers=4)$cluster)
k$centers
table(kmeans(off_comp$prop_males,centers=4,algorithm = 'jenks')$cluster)
0.25*0.66
0.8*0.66
table(kmeans(off_comp$prop_males,centers=3,algorithm = 'jenks')$cluster)
ggplot(chrom_stat, aes(x=BP, y=hom, weight=weight)) + facet_grid(~Chr, scales='free_x') +
geom_point(col='grey70') + stat_smooth(fill='steelblue', method='loess', fullrange = F, span=0.4)
library(ggplot2); library(dplyr)
# Genome statistics
stat_path <- '../../data/populations/d-20_r-80/'
indv <- read.table('../../data/individuals', header=T)
# phi_path <- commandArgs(TrailingOnly=T)[1]
# removing SNPs homozygous in all females (consequently in mothers)
sum_stat <- data.frame()
for(fam in list.dirs(stat_path)[2:length(list.dirs(stat_path))]){  # Excluding first dir (parent)
tmp_stat <- read.csv(paste0(fam,'/batch_0.sumstats.tsv'),header=T,skip=2,sep='\t')
tmp_stat$fam <- rep(basename(fam))
sum_stat <- rbind(sum_stat, tmp_stat)
mother_hom <- NULL
}
rm_snps<- sum_stat %>%
group_by(fam,Locus.ID,Col) %>%  # Each group contains one SNP (both male and female pop)
summarise(hom_mot = sum(Pop.ID=='F' & Q.Nuc=='-'))  # If all females are homozygous -> mother is homozygous
rm_snps <- rm_snps[rm_snps$hom_mot==0, 1:3]
sum_stat <- merge(sum_stat,rm_snps,by=c("Locus.ID","Col","fam"))
# Computing total homozygousity and number of individuals per SNP
male_stat <- sum_stat[sum_stat$Pop.ID=="M",c('Chr','BP','Obs.Hom', 'fam', 'N',"Locus.ID")]
female_stat <- sum_stat[sum_stat$Pop.ID=="F",c('Chr','BP','Obs.Hom', 'fam', 'N')]
chrom_stat <- merge(male_stat,female_stat,by=c('Chr','BP','fam'))
attach(chrom_stat)
chrom_stat$hom <- (Obs.Hom.x * N.x + Obs.Hom.y * N.y)/(N.x + N.y)
chrom_stat <- rename(chrom_stat, Nm=N.x,Nf=N.y, Male.Hom=Obs.Hom.x, Fem.Hom=Obs.Hom.y)
chrom_stat$weight <- chrom_stat$Nf + chrom_stat$Nm
# Excluding unordered contigs
chrom_stat <- chrom_stat[grep("chr.*", chrom_stat$Chr),]
chrom_stat$Chr <- droplevels(chrom_stat$Chr)
# Plotting local regression of data with default parameters
ggplot(chrom_stat, aes(x=BP, y=hom, weight=weight)) + facet_grid(~Chr, scales='free_x') +
geom_point(col='grey70') + stat_smooth(fill='steelblue', method='loess', fullrange = F, span=0.4)
chr_models <- list()
for(chrom in levels(chrom_stat$Chr)){
chr_models[[chrom]] <- loess(data=chrom_stat[chrom_stat$Chr==chrom,],
formula=hom~BP, weights=weight, span=1, model=T)
}
if(FALSE){
par(mfrow=c(3,2))
for(mod in chr_models){
plot(mod$x[order(mod$x)],mod$fitted[order(mod$x)], ylim=c(-0.05,1), type='l')
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
xlim=c(min(mod$x),max(mod$x)), col='red')
abline(h=-0.01)
}
}
# Span of local regression has a strong effect on fit.
library(viridis)
sp_range <- seq(0.2,1,0.05)
virilist <- viridis(n=length(sp_range))
colindex <- 1
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
for(sp in sp_range){
mod <- loess(data=chrom_stat[chrom_stat$Chr==chrom,], degree=1,
formula=hom~BP, weights=weight, span=sp, model=T)
points(mod$x[order(mod$x)],mod$fitted[order(mod$x)], type='l',col=alpha(virilist[colindex],0.4))
points(mod$x[mod$fitted==min(mod$fitted)],rep(-0.01,length(mod$x[mod$fitted==min(mod$fitted)])),
col=alpha(virilist[colindex],0.4),pch=16, cex=1.5)
colindex <- colindex+1
}
colindex <- 1
}
loessGCV <- function (x) {
## Modified from code by Michael Friendly
## http://tolstoy.newcastle.edu.au/R/help/05/11/15899.html
if (!(inherits(x,"loess"))) stop("Error: argument must be a loess object")
## extract values from loess object
span <- x$pars$span
n <- x$n
traceL <- x$trace.hat
sigma2 <- sum(resid(x)^2) / (n-1)
gcv  <- n*sigma2 / (n-traceL)^2
result <- list(span=span, gcv=gcv)
result
}
estLoess <- function(model, spans = c(.05, .95)) {
f <- function(span) {
mod <- update(model, span = span)
loessGCV(mod)[["gcv"]]
}
result <- optimize(f, spans)
result
}
loessGCV <- function (x) {
## Modified from code by Michael Friendly
## http://tolstoy.newcastle.edu.au/R/help/05/11/15899.html
if (!(inherits(x,"loess"))) stop("Error: argument must be a loess object")
## extract values from loess object
span <- x$pars$span
n <- x$n
traceL <- x$trace.hat
sigma2 <- sum(resid(x)^2) / (n-1)
gcv  <- n*sigma2 / (n-traceL)^2
result <- list(span=span, gcv=gcv)
result
}
estLoess <- function(model, spans = c(.05, .95)) {
f <- function(span) {
mod <- update(model, span = span)
loessGCV(mod)[["gcv"]]
}
result <- optimize(f, spans)
result
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- (x = chrom_stat$BP[chrom_stat$Chr==chrom],
y = chrom_stat$hom[chrom_stat$Chr==chrom],
weight = chrom_stat$weight[chrom_stat$Chr==chrom])
mod.cv <- estLoess(mod)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(x = chrom_stat$BP[chrom_stat$Chr==chrom],
y = chrom_stat$hom[chrom_stat$Chr==chrom],
weight = chrom_stat$weight[chrom_stat$Chr==chrom])
mod.cv <- estLoess(mod)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
loess(x = chrom_stat$BP[chrom_stat$Chr==chrom],
y = chrom_stat$hom[chrom_stat$Chr==chrom],
weight = chrom_stat$weight[chrom_stat$Chr==chrom])
loess(x = chrom_stat$BP[chrom_stat$Chr==chrom],
y = chrom_stat$hom[chrom_stat$Chr==chrom],
weight = chrom_stat$weight[chrom_stat$Chr==chrom])
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weight = weight)
mod.cv <- estLoess(mod)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.cv <- estLoess(mod)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
mod
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.best <- estLoess(mod)
mod.cv <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], formula=hom~BP,
degree=1, weights=weight, span=mod.best$minimum, model=T)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
warnings()
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.best <- estLoess(mod)
mod.cv <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], formula=hom~BP,
degree=2, weights=weight, span=mod.best$minimum, model=T)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
estLoess <- function(model, spans = c(.2, .95)) {
f <- function(span) {
mod <- update(model, span = span)
loessGCV(mod)[["gcv"]]
}
result <- optimize(f, spans)
result
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.best <- estLoess(mod)
mod.cv <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], formula=hom~BP,
degree=2, weights=weight, span=mod.best$minimum, model=T)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
estLoess <- function(model, spans = c(.2, .95)) {
f <- function(span) {
mod <- update(model, span = span)
loessGCV(mod)[["gcv"]]
}
result <- optimize(f, spans)
print(result)
result
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.best <- estLoess(mod)
mod.cv <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], formula=hom~BP,
degree=2, weights=weight, span=mod.best$minimum, model=T)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
mod$n
mod$fitted
mod$residuals
mod$enp
mod$s
mod$one.delta
mod$trace.hat
estLoess <- function(model, spans = c(.3, .95)) {
f <- function(span) {
mod <- update(model, span = span)
loessGCV(mod)[["gcv"]]
}
result <- optimize(f, spans)
result
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.best <- estLoess(mod)
mod.cv <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], formula=hom~BP,
degree=2, weights=weight, span=mod.best$minimum, model=T)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
estLoess <- function(model, spans = c(.1, .95)) {
f <- function(span) {
mod <- update(model, span = span)
loessGCV(mod)[["gcv"]]
}
result <- optimize(f, spans)
result
}
library(viridis)
sp_range <- seq(0.2,1,0.05)
par(mfrow=c(3,2))
for(chrom in levels(chrom_stat$Chr)){
plot(x=c(),y=c(),xlim=c(0,max(chrom_stat$BP[chrom_stat$Chr==chrom])), ylim=c(-0.05,1))
abline(h=-0.01)
mod <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], hom ~ BP,
weights = weight)
mod.best <- estLoess(mod)
mod.cv <- loess(data = chrom_stat[chrom_stat$Chr==chrom,], formula=hom~BP,
degree=2, weights=weight, span=mod.best$minimum, model=T)
points(mod.cv$x[order(mod.cv$x)],mod.cv$fitted[order(mod.cv$x)], type='l')
points(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)],rep(-0.01,length(mod.cv$x[mod.cv$fitted==min(mod.cv$fitted)])),
pch=16, cex=1.5)
}
