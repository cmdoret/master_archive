mutate(state=paste0(Generation,Sex,Ploidy)) %>%  # New column containing state information
rename(Fis=F)  # Renaming inbreeding coefficient column (F is colliding with 'FALSE')
# Changing individual states by Human-friendly names
in_data$state <-recode_factor(in_data$state, "F3FD" = "Mothers",  #
"F4FD" = "Daughters",
"F4MH" = "1N Sons",
"F4MD" = "2N Sons")
ploidy_plot(in_data,basename(in_file))  # Calling plotting function
}
View(in_data)
View(in_data)
in_folder <- '../../data/ploidy/thresholds/'
in_data <- read_tsv(paste0(in_folder,in_file),col_names = T)  # Reading files sequentially
library(tidyverse)
in_file <- list.files(in_folder)[1]
in_data <- read_tsv(paste0(in_folder,in_file),col_names = T)  # Reading files sequentially
in_data %<>%   # Erasing original variable
mutate(state=paste0(Generation,Sex,Ploidy)) %>%  # New column containing state information
rename(Fis=F)  # Renaming inbreeding coefficient column (F is colliding with 'FALSE')
in_data$state <-recode_factor(in_data$state, "F3FD" = "Mothers",
"F4FD" = "Daughters",
"F4MH" = "1N Sons",
"F4MD" = "2N Sons")
in_data
ploid_tbl <- in_data
thresh <- basename(in_file)
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("Fis"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
group_stats$sd[is.na(group_stats$sd)] <- 0
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.1, col="green") +
geom_density(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=0, col=Ploidy)) +
geom_density(alpha = 0.1, col="green") +
geom_density(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=0, col=Ploidy)) +
geom_density(alpha = 0.1, col="green") +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=0, col=Ploidy)) +
geom_density(alpha = 0.1, col="green", binwidth=3) +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=0, col=Ploidy)) +
geom_density(alpha = 0.1, col="green", bins=3) +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ploid_tbl
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=0, col=state)) +
geom_density(alpha = 0.1, col="green", bins=3) +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", bins=3) +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", bins=3) +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T) +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", bins=3) +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
out_folder <- 'density'
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", bins=3, stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", bins=3, stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy), stat = 'density') +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
out_folder <- 'density'
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy), bins=3, stat = 'density') +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy), stat = 'density') +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, stat = 'density')) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, y=..density..)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, y=0.01*..density..)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, y=0.1*..density..)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Inbreeding coefficient") + ggtitle(thresh)
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=-0.2, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, y=0.1*..density..)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_point(aes(y=0, col=state)) +
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, y=0.1*..density..)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.1,aes(fill=Ploidy, y=0.1*..density..)) +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.4,aes(fill=Ploidy, y=0.1*..density..)) +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.1, col="green", stat = 'density') +
geom_histogram(alpha = 0.4,aes(fill=Ploidy, stat='identity')) +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.1, col="green") +
geom_histogram(alpha = 0.4,aes(fill=Ploidy, stat='identity')) +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.1, col="green") +
geom_density(alpha = 0.4,aes(fill=Ploidy)) +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.4,aes(fill=Ploidy)) +
geom_density(alpha = 0.1, col="green") +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(alpha = 0.3,aes(fill=Ploidy)) +
geom_density(alpha = 0.1, col="green") +
geom_point(aes(y=0, col=state)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
in_folder <- '../../data/ploidy/thresholds/'
in_file <- list.files(in_folder))[1]
in_file <- list.files(in_folder)[1]
in_file
in_file <- list.files(in_folder)[1]
in_file
in_file <- list.files(in_folder)[2]
in_file
in_file <- list.files(in_folder)[4]
in_file
in_data <- read_tsv(paste0(in_folder,in_file),col_names = T)  # Reading files sequentially
library(tidyverse)
in_data <- read_tsv(paste0(in_folder,in_file),col_names = T)  # Reading files sequentially
in_data$state <-recode_factor(in_data$state, "F3FD" = "Mothers",
"F4FD" = "Daughters",
"F4MH" = "1N Sons",
"F4MD" = "2N Sons")
ploid_tbl <-in_data
thresh <- basename(in_file)
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("Fis"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
View(ploid_tbl)
hist(ploid_tbl$F)
hist(ploid_tbl$O(HOM))
hist(ploid_tbl[,"O(HOM)"])
hist(ploid_tbl$`O(HOM)`
)
hist(ploid_tbl$`O(HOM)`)
hist(ploid_tbl$F, breaks=30)
hist(ploid_tbl$`O(HOM)`, breaks=30)
hist(ploid_tbl$`E(HOM)`, breaks=30)
in_data %<>%   # Erasing original variable
mutate(state=paste0(Generation,Sex,Ploidy)) %>%  # New column containing state information
rename(Fis=F)  # Renaming inbreeding coefficient column (F is colliding with 'FALSE')
in_data$state <-recode_factor(in_data$state, "F3FD" = "Mothers",
"F4FD" = "Daughters",
"F4MH" = "1N Sons",
"F4MD" = "2N Sons")
ploid_tbl <- in_data
View(ploid_tbl)
thresh <- basename(in_file)
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("Fis"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
group_stats
ploid_tbl[ploid_tbl$state!="Mothers"]
ploid_tbl[ploid_tbl$state!="Mothers",]
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = O(HOM)))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = `O(HOM)`))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = `O(HOM)`))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd))) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd))) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd), col='red')) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd)), col='red') +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd)), col='red', lty=2) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
View(in_data)
View(group_stats)
group_stats$sd[is.na(group_stats$sd)] <- 0
gg <- ggplot(data = ploid_tbl, aes(x = Fis))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd)), col='red', lty=2) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("O(HOM)"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
group_stats$sd[is.na(group_stats$sd)] <- 0
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c(`O(HOM)`),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
group_stats$sd[is.na(group_stats$sd)] <- 0
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("`O(HOM)`"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
group_stats$sd[is.na(group_stats$sd)] <- 0
gg <- ggplot(data = ploid_tbl, aes(x = `O(HOM)`))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd)), col='red', lty=2) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Inbreeding coefficient") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
gg <- ggplot(data = ploid_tbl, aes(x = factor(Fis), y = Fis,fill = state))+
geom_bar(stat = 'identity') +
geom_hline(data = group_stats, aes(yintercept = mean)) +
geom_segment(data = group_stats,aes(x=mid_x,xend=mid_x,y=mean-sd,yend=mean+sd)) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Individuals") + ylab("Homozygosity") + ggtitle(thresh)
gg
gg <- ggplot(data = ploid_tbl, aes(x = `O(HOM)`))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd)), col='red', lty=2) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Homozygosity") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
gg
View(ploid_tbl)
testdf <- ploid_tbl[ploid_tbl$Family=="A",]
hist(testdf$`O(HOM)`)
hist(testdf$`Fis`)
testdf <- testdf[testdf$Sex=="M"]
testdf <- testdf[testdf$Sex=="M",]
hist(testdf$`O(HOM)`)
hist(testdf$`Fis`)
testdf
gg
suppressMessages(library(tidyverse))
in_folder <- '../../data/ploidy/thresholds/'
in_folder <- commandArgs(trailingOnly = TRUE)  # Folder containing input tables
in_folder <- '../../data/ploidy/thresholds/'
list.files(in_folder)
list.files(in_folder)[3]
list.files(in_folder)[4]
in_file <- list.files(in_folder)[4]
in_data <- read_tsv(paste0(in_folder,in_file),col_names = T)
in_data
in_data %<>%   # Erasing original variable
mutate(state=paste0(Generation,Sex,Ploidy)) %>%  # New column containing state information
rename(Fis=F)  # Renaming inbreeding coefficient column (F is colliding with 'FALSE')
in_data %<>%   # Erasing original variable
mutate(state=paste0(Generation,Sex,Ploidy)) %>%  # New column containing state information
rename(Fis=F)  # Renaming inbreeding coefficient column (F is colliding with 'FALSE')
in_data
in_data <- read_tsv(paste0(in_folder,in_file),col_names = T)  # Reading files sequentially
in_data
in_data %<>%   # Erasing original variable
mutate(state=paste0(Generation,Sex,Ploidy)) %>%  # New column containing state information
rename(Fis=F)  # Renaming inbreeding coefficient column (F is colliding with 'FALSE')
in_data$state <-recode_factor(in_data$state, "F3FD" = "Mothers",
"F4FD" = "Daughters",
"F4MH" = "1N Sons",
"F4MD" = "2N Sons")
ploidy_plot(in_data,basename(in_file))  # Calling plotting function
ploid_tbl = in_data; thresh = basename(in_file)
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("Fis"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
group_stats
group_stats$sd[is.na(group_stats$sd)] <- 0
group_stats
group_stats <- ploid_tbl %>%  # Computing summary stats for each family
filter(Generation == 'F4' & Sex == 'F') %>%  # Computing from daughters only
group_by(Family) %>%
summarise_at(.cols=c("HOM"),.funs = c("mean","sd")) %>%
mutate(state = "Daughters") %>%  # These are all daughters (used for plotting)
mutate(mid_x = n()/2)  # Graphical parameter for plots
View(group_stats)
group_stats$sd[is.na(group_stats$sd)] <- 0
ggplot(data = ploid_tbl, aes(x = HOM))+
geom_density(data = ploid_tbl[ploid_tbl$state!="Mothers",], alpha = 0.3,aes(fill=Sex)) +  # Daughters vs Sons as density area
#geom_density(alpha = 0.1, col="green") +  # All individuals in family showed by green density curve
geom_point(data = ploid_tbl[ploid_tbl$state=="Mothers",], aes(y=0, col=state)) +  # Showing mother as a dot
geom_vline(data = group_stats, aes(xintercept = (mean + 2* sd)), col='red', lty=2) +
theme(axis.text.x = element_blank()) + facet_wrap(~Family,drop=T, scale='free') +
xlab("Homozygosity") + ylab("Density") + ggtitle(paste("Threshold ", thresh, sep=" "))
require(tidyverse)
detach("package:purrr", unload=TRUE)
detach("package:readr", unload=TRUE)
detach("package:tidyverse", unload=TRUE)
detach("package:tidyr", unload=TRUE)
detach("package:tibble", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:dplyr", unload=TRUE)
if not require(suppressMessages(tidyversee)){
stopifnot(
suppressMessages(
require(ggplot2);
require(tidyr);
require(dplyr)
)
)
}
stopifnot(
require(ggplot2);
require(tidyr);
require(dplyr)
)
stopifnot(require(ggplot2);require(tidyr);require(dplyr))
load_packages <- function(){require(ggplot2);require(tidyr), require(dplyr)}
load_packages <- function(){require(ggplot2);require(tidyr); require(dplyr)}
if(! require(suppressMessages(tidyversee))){
stopifnot(load_packages)
}
if(! require(tidyversee)){
stopifnot(load_packages)
}
if(!require(tidyversee)){
stopifnot(load_packages)
}
require(tidyversee)
if(!require(tidyversee)){
print("lol")
stopifnot(load_packages)
}
min(require(ggplot2),require(tidyr), require(dplyr))
load_packages <- function(){min(require(ggplot2),require(tidyr), require(dplyr))}
if(!require(tidyversee)){
print("lol")
stopifnot(load_packages)
}
load_packages <- function(){all(require(ggplot2),require(tidyr), require(dplyr))}
load_packages
if(!require(tidyversee)){
print("lol")
stopifnot(load_packages())
}
if(!require(tidyversee)){
print("lol")
stopifnot(load_packages())
}
all(require(ggplot2),require(tidyr), require(dplyr))
detach("package:ggplot2", unload=TRUE)
load_packages <- function(){all(require(ggplot2),require(tidyr), require(dplyr))}
if(!require(tidyversee)){
print("lol")
stopifnot(load_packages())
}
load_packages <- function(){all(require(ggplot2),require(tidyr), require(dplyr))}
if(!require(tidyverse)){
stopifnot(load_packages())
}
if(!suppressMessages(require(tidyverse))){
stopifnot(load_packages())
}
